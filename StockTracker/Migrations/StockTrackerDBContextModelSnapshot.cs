// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockTracker;

namespace StockTracker.Migrations
{
    [DbContext(typeof(StockTrackerDBContext))]
    partial class StockTrackerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("StockTracker.Data.Model.Position", b =>
                {
                    b.Property<long>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("StockTracker.Data.Model.Security", b =>
                {
                    b.Property<long>("SecurityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AveragePrice")
                        .HasColumnType("REAL");

                    b.Property<double>("Count")
                        .HasColumnType("REAL");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("PositionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("SecurityId");

                    b.HasIndex("PositionId");

                    b.ToTable("Security");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Security");
                });

            modelBuilder.Entity("StockTracker.Data.Model.Trade", b =>
                {
                    b.Property<long>("TradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("PositionId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SecurityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TradeAction")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TradeContractCount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("TradeDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("TradeOrder")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TradePricePerContract")
                        .HasColumnType("REAL");

                    b.HasKey("TradeId");

                    b.HasIndex("PositionId");

                    b.HasIndex("SecurityId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("StockTracker.Data.Model.Dividend", b =>
                {
                    b.HasBaseType("StockTracker.Data.Model.Security");

                    b.HasDiscriminator().HasValue("Dividend");
                });

            modelBuilder.Entity("StockTracker.Data.Model.Option", b =>
                {
                    b.HasBaseType("StockTracker.Data.Model.Security");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("Strike")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Option");
                });

            modelBuilder.Entity("StockTracker.Data.Model.Security", b =>
                {
                    b.HasOne("StockTracker.Data.Model.Position", "Position")
                        .WithMany("Securities")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StockTracker.Data.Model.Trade", b =>
                {
                    b.HasOne("StockTracker.Data.Model.Position", "Position")
                        .WithMany("Trades")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockTracker.Data.Model.Security", "Security")
                        .WithMany()
                        .HasForeignKey("SecurityId");
                });
#pragma warning restore 612, 618
        }
    }
}

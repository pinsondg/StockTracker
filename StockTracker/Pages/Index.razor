@page "/"
@inject IPositionService PositionService

<div class="container-fluid page-container">
    <div class="row page-container">
        <div style="height:100%" class="col-sm-8 border-right">
            <div class="positions-container">
                <div class="d-flex flex-row align-items-center justify-content-around border-bottom positions-header">
                    <h1>
                        Your Positions
                    </h1>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addPositionModal">Add Position</button>
                </div>
                <div class="positions-content">
                    @foreach (var position in Positions)
                    {
                        <PositionComponent Position="@position" OnPositionDeleted="@StateHasChanged"/>
                    }
                    @*<PositionComponent Position=' new Position() { Ticker = "AAA", CompanyName = "Company1", Trades = new List<Trade> { new Trade { TradeAction = TradeAction.BUY, TradeContractCount = 100, TradePricePerContract = 12, TradeDate = DateTime.Now, Security = new Stock() { } } , new Trade() { TradeAction = TradeAction.SELL, Security = new Option() { ExpirationDate = DateTime.Now.AddDays(5), Strike = 12.50, Type = Option.OptionType.COVERED_CALL }, TradeDate = DateTime.Now, TradeContractCount = 100, TradePricePerContract = 0.23 }, new Trade() { TradePricePerContract = 13.00, TradeContractCount = 90, TradeAction = TradeAction.SELL, Security = new Stock() } } }'/>*@
                    @if (Positions.Count == 0)
                    {
                        <h5>No positions added. Click the "Add Position" button to add a positon.</h5>
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="positions-container">
                <div class="d-flex flex-row align-items-center justify-content-around border-bottom positions-header">
                    <h1>
                        Totals
                    </h1>
                </div>
                <div class="positions-content">
                    <h3>Realized Gains: @GetTotalRealizedGains()</h3>
                    <h3>Open P&L: @GetTotalOpenPL()</h3>
                </div>
            </div>      
        </div>
    </div>
</div>
<AddPositionModal Positions="Positions" OnPositionAdded="@StateHasChanged"/>

@code {
    public List<Position> Positions { get; set; }

    protected override void OnInitialized()
    {
        Positions = PositionService.GetAllPositions();
    }

    public string GetTotalRealizedGains()
    {
        var gainsSum = 0.0;
        Positions.ForEach(position => gainsSum += position.GetTotalRelizedGains());
        return String.Format("{0:C2}", gainsSum);
    }

    public string GetTotalOpenPL()
    {
        var plSum = 0.0;
        Positions.ForEach(position => plSum += PositionService.GetPositionCurrentOpenPL(position));
        return String.Format("{0:C2}", plSum);
    }
}

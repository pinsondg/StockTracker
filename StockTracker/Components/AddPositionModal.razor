@inject IPositionService PositionService
@inject IJSRuntime JSRuntime

<div class="modal fade" id="addPositionModal" tabindex="-1" role="dialog" aria-labelledby="addPositionModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addPositionModalLabel">Add Position</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@position" OnValidSubmit="@HandleValidSubmit">
                    <label>
                        Company Name:
                        <InputText id="company-name" @bind-Value="position.CompanyName" />
                    </label>
                    <label>
                        Ticker:
                        <InputText id="ticker" @bind-Value="position.Ticker" />
                    </label>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    private Position position = new Position();

    private void HandleValidSubmit()
    {
        PositionService.AddPosition(position);
        JSRuntime.InvokeVoidAsync("helperFunctions.hideModal", "addPositionModal");
        StateHasChanged();
    }
}
